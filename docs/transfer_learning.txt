'''EXAMPLE
'''

from tensorflow.keras.applications.resnet50 import ResNet50
from tensorflow.keras.layers import Dense, GlobalAveragePooling2D
from tensorflow.keras.models import Model

# Load a pre-trained ResNet50 model
base_model = ResNet50(weights='imagenet', include_top=False, input_shape=(224, 224, 3))

# Add your own classification layers on top
x = base_model.output
x = GlobalAveragePooling2D()(x)
x = Dense(1024, activation='relu')(x)
predictions = Dense(num_classes, activation='softmax')(x)

# Freeze the pre-trained layers
for layer in base_model.layers:
    layer.trainable = False

# Create the final model and compile it
model = Model(inputs=base_model.input, outputs=predictions)
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Fine-tune the last few layers
for layer in model.layers[-5:]:
    layer.trainable = True

# Train the model on your own data
model.fit(X_train, y_train, validation_data=(X_val, y_val), epochs=10, batch_size=32)
