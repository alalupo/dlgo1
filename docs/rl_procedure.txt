
0 Initialize a bot:

	python init_ac_agent.py --board-size 9 ac_v1.hdf5

1 Generate self-play games in chunks of 5,000.

	python self_play_ac.py --board-size 9 --learning-agent ac_v1.hdf5 --num-games 5000

2 After each chunk, train the agent and compare it to the previous version of
your bot.

	python train_ac.py --learning-agent bots/ac_v1.hdf5 --agent-out bots/ac_v2.hdf5 --lr 0.01 --bs 1024 exp_0001.hdf5

3 If the new bot can beat the previous bot 60 out of 100 games, you’ve successfully
improved your agent! Start the process over with the new bot.

	python eval_ac_bot.py --agent1 bots/ac_v2.hdf5 --agent2 bots/ac_v1.hdf5 --num-games 100

        The output should look something like this:
        ...
        Simulating game 100/100...
        9 oooxxxxx.
        8 .oox.xxxx
        7 ooxxxxxxx
        6 .oxx.xxxx
        5 oooxxx.xx
        4 o.ox.xx.x
        3 ooxxxxxxx
        2 ooxx.xxxx
        1 oxxxxxxx.
        ABCDEFGHJ
        B+31.5
        Agent 1 record: 60/100

    Because the ac_v2 bot is measurably stronger than ac_v1, you can switch to generating games with ac_v2:

	python self_play_ac.py --board-size 9 --learning-agent ac_v2.hdf5 --num-games 5000 --experience-out exp_0002.hdf5

    When that’s done, you can train and evaluate again:

	python train_ac.py --learning-agent bots/ac_v2.hdf5 --agent-out bots/ac_v3.hdf5 --lr 0.01 --bs 1024 exp_0002.hdf5
    python eval_ac_bot.py --agent1 bots/ac_v3.hdf5 --agent2 bots/ac_v2.hdf5 --num-games 100

4 If the updated bot wins fewer than 60 out of 100 games, generate another
chunk of self-play games and retrain. Continue training until the new bot is
strong enough.

    This case wasn’t quite as successful as the last time:
    Agent 1 record: 51/100
    The ac_v3 bot beat the ac_v2 bot only 51 times out of 100. With those results, it’s hard
    to say whether ac_v3 is a tiny bit stronger or not; the safest conclusion is that it’s basically the same strength as ac_v2.
    But don’t despair. You can generate more training
    data and try again:

    python self_play_ac.py --board-size 9 --learning-agent ac_v2.hdf5 --num-games 5000

    The train_ac script will accept multiple training data files on the command line:

    python train_ac.py --learning-agent ac_v2.hdf5 --agent-out ac_v3.hdf5 --lr 0.01 --bs 1024 exp_0002.hdf5 exp_0002a.hdf5